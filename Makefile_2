########################## Created by Aszdrick Graf ###########################
############################ <aszdrick@gmail.com> #############################
###############################################################################

################################## VARIABLES ##################################

# Compiler & linker flags
LDLIBS    :=-lm -lgtest -pthread
LDFLAGS   :=
CXXFLAGS  :=-std=c++11 -Wall -O3
INCLUDE    =-I$(HDRDIR)
# Directories
SRCDIR    :=src
HDRDIR    :=include
BUILDIR   :=build
BINDIR    :=bin
TESTDIR   :=test
DEPDIR    :=.deps
# Files
SRC       :=$(shell find $(SRCDIR) -name '*.cpp')
DEP       :=$(patsubst $(SRCDIR)/%.cpp,$(DEPDIR)/%.d,$(SRC))
OBJ       :=$(patsubst $(SRCDIR)/%.cpp,$(BUILDIR)/%.o,$(SRC))
EXEC      :=$(BINDIR)/executable
TSTFILE   :=$(shell find $(TESTDIR) -name '*.cpp')
TSTDEP    :=$(patsubst %.cpp,$(DEPDIR)/%.d,$(TSTFILE))
TSTOBJ    :=$(patsubst %.cpp,$(BUILDIR)/%.o,$(TSTFILE))
TSTEXEC   :=$(patsubst $(TESTDIR)/%.cpp,$(BINDIR)/%,$(TSTFILE))
# Utilities
SHELL     :=/bin/bash
MKDIR     :=mkdir
GETDEPCOM :='$(CXX) -MM $(INCLUDE) $(CXXFLAGS)'

.PHONY: all makedir clean clean_deps clean_all tests

################################# MAIN MODULE #################################

all: makedir $(EXEC)

$(EXEC): $(OBJ)
	@echo "[linking] $@"
	@$(CXX) $(OBJ) -o $@ $(LDLIBS) $(LDFLAGS)

$(BUILDIR)/%.o: $(SRCDIR)/%.cpp
	@echo "[  $(CXX)  ] $< -> .o"
	@$(MKDIR) -p $(BUILDIR)/$(*D)
	@$(MKDIR) -p $(DEPDIR)/$(*D)
	@$(CXX) $(CXXFLAGS) $(INCLUDE) -c $< -o $@ \
	-MMD -MT "$@" -MF "$(DEPDIR)/$*.d"

makedir: | $(BINDIR) $(BUILDIR) $(TESTDIR)

$(BINDIR) $(BUILDIR) $(TESTDIR):
	@echo "[ $(MKDIR) ] Creating directory '$@'"
	@$(MKDIR) -p $@

# Deprecated
# For each .cpp file, creates a .d file with all dependencies of .cpp,
# including .d as target (to ensure updated dependencies, in case of
# adding a new include or nested include)
#$(DEPDIR)/%.d: $(SRCDIR)/%.cpp
#	@echo "[makedep] $< -> .d"
#	@$(CXX) -MM -MP -MT "$(BUILDIR)/$*.o $@" -MF "$@" $< $(INCLUDE) $(CXXFLAGS)

################################ TESTS MODULE #################################

tests: makedir $(TSTEXEC)

$(TSTEXEC): $(TSTOBJ) $($(@F)OBJ)
	@echo "[linking] $@"
	$(CXX) $($(@F)OBJ) -o $@ $(LDLIBS) $(LDFLAGS)

#@$(SHELL) filter_needed.sh '$(CXX) -MM $(INCLUDE) $(CXXFLAGS)' src/main.cpp $(HDRDIR)

$(BUILDIR)/%.o: %.cpp
	@echo "[  $(CXX)  ] $< -> .o"
	@$(MKDIR) -p $(BUILDIR)/$(*D)
	@$(CXX) $(CXXFLAGS) $(INCLUDE) -c $< -o $@

$(DEPDIR)/%.d: %.cpp
	$(eval TEMP=$(shell $(SHELL) filter_needed.sh $(GETDEPCOM) $< $(BUILDIR)))
	$(eval TEMP=$(filter $(OBJ) $(TSTOBJ),$(TEMP)))
	@$(MKDIR) -p $(DEPDIR)/$(*D)
	@echo $(*F)OBJ := $(TEMP) >> $@

################################ CLEAN MODULE #################################

# Only remove object files
clean:
	@$(RM) -r $(BUILDIR)

# Only remove dependency files
clean_deps:
	@$(RM) -r $(DEPDIR)

# Remove object, binary and dependency files
clean_all: clean clean_deps
	@$(RM) -r $(BINDIR)

################################## INCLUDES ###################################

# if $(DEPDIR) does not exists, create it!
ifeq (,$(wildcard $(DEPDIR)))
$(shell $(MKDIR) -p $(DEPDIR))
endif
# Do not include list of dependencies if make was called with target clean_all
ifneq ($(MAKECMDGOALS), clean_all)
ifneq ($(MAKECMDGOALS), clean_deps)
-include $(DEP)
-include $(TSTDEP)
endif
endif
